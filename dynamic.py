import joblib
import json
import pandas as pd

#model_name is "malware_classifier.joblib"
#json_name is the file you want to test
#malware_label is 0 for a benign file and 1 for a malware file
def inference_test(model_name, json_name, malware_label):
    feature_labels = [
        'file_opened', 'file_read', 'file_deleted', 'regkey_read',
        'tls_sessions', 'udp_traffic', 'http_requests', 'dns_queries',
        'tcp_connections', 'icmp_requests', 'regkey_opened', 'malware'
    ]
    clf_features = feature_labels[:-1]

    feature_values = []
    with open(json_name, "r") as json_file:
        json_data = json.load(json_file)    
        summary_json = json_data["behavior"]["summary"]
        network_json = json_data.get("network", {})

        feature_values.extend([
            len(summary_json.get("file_opened", [])),
            len(summary_json.get("file_read", [])),
            len(summary_json.get("file_deleted", [])),
            len(summary_json.get("regkey_read", [])),
            len(network_json.get("tls", [])),  # tls_sessions
            len(network_json.get("udp", [])),  # udp_traffic
            len(network_json.get("http", [])),  # http_requests
            len(network_json.get("dns", [])),  # dns_queries
            len(network_json.get("tcp", [])),  # tcp_connections
            len(network_json.get("icmp", [])),  # icmp_requests
            len(summary_json.get("regkey_opened", []))
        ])
        feature_values.append(malware_label)
    df = pd.DataFrame([feature_values], columns=feature_labels)
    clf = joblib.load(model_name)
    pred = clf.predict(df[clf_features])
    return pred